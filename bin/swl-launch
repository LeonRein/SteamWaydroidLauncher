#!/usr/bin/bash

# Cleanup function
cleanup() {
    echo "Cleaning up..."
    pkexec /usr/lib/swl/waydroid-container-stop
    # Kill cage if it's still running
    pkill -f "cage.*launch_waydroid" 2>/dev/null || true
}

# Set up trap for cleanup on exit, SIGTERM, and SIGINT
trap cleanup EXIT TERM INT

# Get current resolution using xrandr if WIDTH/HEIGHT is not defined by an external script
if [ -z "${WAYDROID_WIDTH:-}" ] || [ -z "${WAYDROID_HEIGHT:-}" ]; then
    # Get the primary display resolution more reliably
    resolution=$(xrandr --current 2>/dev/null | awk '/\*/ {print $1; exit}' | head -1)
    if [ -n "$resolution" ] && [[ "$resolution" =~ ^[0-9]+x[0-9]+$ ]]; then
        WAYDROID_WIDTH=${resolution%x*}
        WAYDROID_HEIGHT=${resolution#*x}
        echo "Detected resolution: ${WAYDROID_WIDTH}x${WAYDROID_HEIGHT}"
    else
        # Fallback to default resolution if xrandr fails
        WAYDROID_WIDTH=1920
        WAYDROID_HEIGHT=1080
        echo "Using default resolution: ${WAYDROID_WIDTH}x${WAYDROID_HEIGHT}"
    fi
    export WAYDROID_WIDTH WAYDROID_HEIGHT
fi

# for backwards compatibility, default to show-full-ui
if (($# == 0)); then
	set -- show-full-ui
fi

# Kill any previous remnants
if [ "$(systemctl is-active waydroid-container.service)" == 'active' ]; then
	pkexec /usr/lib/swl/waydroid-container-stop
fi

# Check if Waydroid is initialized, send user to the docs
if grep -qz 'not initialized' <<< $(/usr/bin/waydroid status); then
	kdialog --error "Waydroid is not initialized!\n\nTo set up Waydroid, run this command:\n\nsudo waydroid init\n\nFor detailed setup instructions, visit:\nhttps://docs.waydro.id/\n\nClick OK to open the documentation."
	xdg-open "https://docs.waydro.id/"
	exit 1
fi

launch_waydroid() {
        wlr-randr --output X11-1 --custom-mode "$1"
        shift
        exec waydroid "$@" &> /dev/null
}
export -f launch_waydroid

if ! pkexec /usr/lib/swl/waydroid-container-start; then
    echo "Failed to start Waydroid container"
    exit 1
fi

# Check if we have a Wayland socket available
if [ -n "${WAYLAND_DISPLAY:-}" ] && [ -S "${XDG_RUNTIME_DIR}/${WAYLAND_DISPLAY}" ]; then
    # We have a Wayland socket, run directly without cage
    waydroid "$@" &
else
    # No Wayland socket, use cage
    if [ -z "$(pgrep wlr-randr)" ]; then
        cage -- bash -uxc 'launch_waydroid "$@"' _ "${WAYDROID_WIDTH:-1280}x${WAYDROID_HEIGHT:-800}" "$@" &
    fi
fi

# Fix controllers, we know Waydroid has started because surfaceflinger is running
timeout=30
while [ $timeout -gt 0 ] && [ -z "$(pgrep surfaceflinger)" ]; do
    sleep 1
    ((timeout--))
done

if [ $timeout -eq 0 ]; then
    echo "Warning: Waydroid surfaceflinger not detected within 30 seconds"
else
    sleep 10
    pkexec /usr/lib/swl/waydroid-fix-controllers
fi

# Waydroid is now live!
wait
